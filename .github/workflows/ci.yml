name: Terraform CI

on:
  workflow_dispatch:
  push:
  #  paths:
  #    - 'modules/**'
  pull_request:
    paths:
      - 'modules/**'

env:
  TF_PLUGIN_CACHE_DIR: ${{ github.workspace }}/.terraform.d/plugin-cache

jobs:
    terraform:
        name: 'Terraform CI'
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v4

          - name: Set up Terraform
            uses: hashicorp/setup-terraform@v3
            with:
              terraform_wrapper: false
              terraform_version: 1.4.1

          - name: Create Terraform Plugin Cache Dir
            run: mkdir -p $TF_PLUGIN_CACHE_DIR

          - name: Cache Terraform
            uses: actions/cache@v4
            with:
              path: ${{ env.TF_PLUGIN_CACHE_DIR }}
              key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
              restore-keys: ${{ runner.os }}-terraform-

          - name: Terraform validate modules and collect failures
            id: validate
            run: |
              failed_modules=()
              for dir in $(find ./modules -type d -mindepth 1 -maxdepth 1); do
                # hack: dont need provider alias during ci
                pushd $dir
                    sed -i '/databricks.mws/d' *.tf
                popd
                echo "Processing module $dir"
                terraform -chdir=$dir init -lock=false -backend=false -input=false
                if ! terraform -chdir=$dir validate; then
                  failed_modules+=($dir)
                fi
              done
              echo "failed_modules=${failed_modules[@]}" >> $GITHUB_ENV

          - name: Output failed modules
            run: |
              if [ -n "${{ env.failed_modules }}" ]; then
                echo "The following modules failed validation:"
                for module in ${{ env.failed_modules }}; do
                  echo $module
                done
                exit 1
              else
                echo "All modules passed validation."
              fi
